{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","id","name","email","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAceA,EAZE,SAACC,GACV,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAAMI,GAAhC,cACrB,gCACJ,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,eCaPC,EAlBM,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACI,8BAEAA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACA,cAAC,EAAD,CAEIP,GAAII,EAAOG,GAAGP,GACdC,KAAMG,EAAOG,GAAGN,KAChBC,MAAOE,EAAOG,GAAGL,OAHVK,SCIZC,EAZG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKb,UAAU,MAAf,SACA,uBACAA,UAAU,mCACVc,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCHI,EARA,SAAClB,GACZ,OACI,qBAAKmB,MAAS,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAvE,SACKtB,EAAMuB,YCoCJC,G,wDAlCX,aAAgB,IAAD,8BACX,gBAUJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACd,YAAaa,EAAME,OAAOC,SAVzC,EAAKC,MAAQ,CACTtB,OAAQ,GACRK,YAAa,IAJN,E,gEAOM,IAAD,OAChBkB,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC7EF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAACnB,OAAQ2B,S,+BAKpC,IAAD,EAC0BC,KAAKN,MAA5BtB,EADH,EACGA,OAAQK,EADX,EACWA,YACVwB,EAAiB7B,EAAO8B,QAAO,SAAAC,GACjC,OAAOA,EAAMlC,KAAKmC,cAAcC,SAAS5B,EAAY2B,kBAEzD,OAAQhC,EAAOkC,OAGX,sBAAKzC,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,wBACA,cAAC,EAAD,CAAWa,aAAcsB,KAAKX,iBAC1B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUjB,OAAS6B,SAN3B,6C,GArBUM,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b1536b0e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n    const Card = (props) => {\r\n        return (\r\n            <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n                <img alt='robots' src={`https://robohash.org/${props.id}?200x200`} />\r\n                <div>\r\n            <h2>{props.name}</h2>\r\n            <p>{props.email}</p>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n    const CardList = ({robots}) => {\r\n        return (\r\n            <div>\r\n        {\r\n            robots.map((user, i) =>{\r\n                return (\r\n                <Card \r\n                    key = {i} \r\n                    id={robots[i].id} \r\n                    name={robots[i].name} \r\n                    email={robots[i].email}\r\n                    />\r\n                    );\r\n            })\r\n        }\r\n        </div>\r\n        );\r\n    }\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n        <input \r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='search' \r\n        placeholder='search robots' \r\n        onChange={searchChange}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style = {{overflowY: 'scroll', border: '5px solid black', height: '500px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\nimport CardList from '../Components/CardList';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport Scroll from '../Components/Scroll';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    constructor () {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json())\r\n        .then(users => this.setState({robots: users}));  \r\n    }\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value})\r\n    }\r\nrender() {\r\n    const { robots, searchfield} = this.state;\r\n    const filteredRobots = robots.filter(robot => {\r\n        return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n    })\r\n    return !robots.length ?\r\n        <h1>Loading</h1> :\r\n    (\r\n        <div className='tc'>\r\n        <h1 className='f1'>RoboAmigos</h1>\r\n        <SearchBox searchChange={this.onSearchChange}/>\r\n            <Scroll>\r\n                <CardList robots= {filteredRobots} />\r\n            </Scroll>\r\n        </div>\r\n    );\r\n}\r\n}\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}